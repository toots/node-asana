// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  module.exports = function(src) {
    var Collection, Model;
    Model = (function(_super) {

      __extends(Model, _super);

      Model.name = 'Model';

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.asana = src.asana;

      Model.prototype.sync = src.sync;

      return Model;

    })(src.asana.Backbone.Model);
    Collection = (function(_super) {

      __extends(Collection, _super);

      Collection.name = 'Collection';

      function Collection() {
        return Collection.__super__.constructor.apply(this, arguments);
      }

      Collection.prototype.asana = src.asana;

      Collection.prototype.sync = src.sync;

      return Collection;

    })(src.asana.Backbone.Collection);
    src.User = (function(_super) {

      __extends(User, _super);

      User.name = 'User';

      function User() {
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.urlRoot = "/users";

      return User;

    })(Model);
    src.Users = (function(_super) {

      __extends(Users, _super);

      Users.name = 'Users';

      function Users() {
        return Users.__super__.constructor.apply(this, arguments);
      }

      Users.prototype.url = "/users";

      Users.prototype.model = src.User;

      return Users;

    })(Collection);
    src.Story = (function(_super) {

      __extends(Story, _super);

      Story.name = 'Story';

      function Story() {
        return Story.__super__.constructor.apply(this, arguments);
      }

      Story.prototype.urlRoot = "/stories";

      return Story;

    })(Model);
    src.Stories = (function(_super) {

      __extends(Stories, _super);

      Stories.name = 'Stories';

      function Stories() {
        return Stories.__super__.constructor.apply(this, arguments);
      }

      Stories.prototype.url = "/stories";

      Stories.prototype.model = src.Story;

      return Stories;

    })(Collection);
    src.Task = (function(_super) {

      __extends(Task, _super);

      Task.name = 'Task';

      function Task() {
        return Task.__super__.constructor.apply(this, arguments);
      }

      Task.prototype.urlRoot = "/tasks";

      Task.prototype.initialize = function() {
        var _this = this;
        this.stories = new src.Stories;
        this.stories.url = function() {
          return "/tasks/" + _this.id + "/stories";
        };
        this.projects = new src.Projects;
        return this.projects.url = function() {
          return "/tasks/" + _this.id + "/projects";
        };
      };

      return Task;

    })(Model);
    src.Tasks = (function(_super) {

      __extends(Tasks, _super);

      Tasks.name = 'Tasks';

      function Tasks() {
        return Tasks.__super__.constructor.apply(this, arguments);
      }

      Tasks.prototype.url = "/tasks";

      Tasks.prototype.model = src.Task;

      return Tasks;

    })(Collection);
    src.Project = (function(_super) {

      __extends(Project, _super);

      Project.name = 'Project';

      function Project() {
        return Project.__super__.constructor.apply(this, arguments);
      }

      Project.prototype.urlRoot = "/projects";

      Project.prototype.initialize = function() {
        var _this = this;
        this.tasks = new src.Tasks;
        return this.tasks.url = function() {
          return "/projects/" + _this.id + "/tasks";
        };
      };

      return Project;

    })(Model);
    src.Projects = (function(_super) {

      __extends(Projects, _super);

      Projects.name = 'Projects';

      function Projects() {
        return Projects.__super__.constructor.apply(this, arguments);
      }

      Projects.prototype.url = "/projects";

      Projects.prototype.model = src.Project;

      return Projects;

    })(Collection);
    src.Workspace = (function(_super) {

      __extends(Workspace, _super);

      Workspace.name = 'Workspace';

      function Workspace() {
        return Workspace.__super__.constructor.apply(this, arguments);
      }

      Workspace.prototype.urlRoot = "/workspaces";

      Workspace.prototype.initialize = function() {
        var _this = this;
        this.users = new src.Users;
        this.users.url = function() {
          return "/workspaces/" + _this.id + "/users";
        };
        this.tasks = new src.Tasks;
        this.tasks.url = function() {
          return "/workspaces/" + _this.id + "/tasks";
        };
        this.projects = new src.Projects;
        return this.projects.url = function() {
          return "/workspaces/" + _this.id + "/projects";
        };
      };

      return Workspace;

    })(Model);
    return src.Workspaces = (function(_super) {

      __extends(Workspaces, _super);

      Workspaces.name = 'Workspaces';

      function Workspaces() {
        return Workspaces.__super__.constructor.apply(this, arguments);
      }

      Workspaces.prototype.url = "/workspaces";

      Workspaces.prototype.model = src.Workspace;

      return Workspaces;

    })(Collection);
  };

}).call(this);
