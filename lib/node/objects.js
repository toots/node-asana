// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  module.exports = function(src) {
    var Collection, Model;
    Model = (function(_super) {

      __extends(Model, _super);

      Model.name = 'Model';

      function Model() {
        return Model.__super__.constructor.apply(this, arguments);
      }

      Model.prototype.asana = src.asana;

      Model.prototype.sync = src.sync;

      return Model;

    })(src.asana.Backbone.Model);
    Collection = (function(_super) {

      __extends(Collection, _super);

      Collection.name = 'Collection';

      function Collection() {
        return Collection.__super__.constructor.apply(this, arguments);
      }

      Collection.prototype.asana = src.asana;

      Collection.prototype.sync = src.sync;

      return Collection;

    })(src.asana.Backbone.Collection);
    src.User = (function(_super) {

      __extends(User, _super);

      User.name = 'User';

      function User() {
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.baseUrl = "/users";

      return User;

    })(Model);
    src.Users = (function(_super) {

      __extends(Users, _super);

      Users.name = 'Users';

      function Users() {
        return Users.__super__.constructor.apply(this, arguments);
      }

      Users.prototype.url = "/users";

      Users.prototype.model = src.User;

      return Users;

    })(Collection);
    src.Workspace = (function(_super) {

      __extends(Workspace, _super);

      Workspace.name = 'Workspace';

      function Workspace() {
        return Workspace.__super__.constructor.apply(this, arguments);
      }

      Workspace.prototype.baseUrl = "/workspaces";

      return Workspace;

    })(Model);
    return src.Workspaces = (function(_super) {

      __extends(Workspaces, _super);

      Workspaces.name = 'Workspaces';

      function Workspaces() {
        return Workspaces.__super__.constructor.apply(this, arguments);
      }

      Workspaces.prototype.url = "/workspaces";

      Workspaces.prototype.model = src.Workspace;

      return Workspaces;

    })(Collection);
  };

}).call(this);
