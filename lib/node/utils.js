// Generated by CoffeeScript 1.3.1
(function() {
  var clone, fromByteArray, ioOptions, optName, utf8ToBytes;

  fromByteArray = require("base64-js").fromByteArray;

  utf8ToBytes = function(str) {
    var byteArray, h, i, j, _i, _j, _ref, _ref1;
    byteArray = [];
    for (i = _i = 0, _ref = str.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      if (str.charCodeAt(i) <= 0x7F) {
        byteArray.push(str.charCodeAt(i));
      } else {
        h = encodeURIComponent(str.charAt(i)).substr(1).split("%");
        for (j = _j = 0, _ref1 = h.length; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          byteArray.push(parseInt(h[j], 16));
        }
      }
    }
    return byteArray;
  };

  module.exports.b64 = function(str) {
    return fromByteArray(utf8ToBytes(str));
  };

  module.exports.clone = clone = function(src) {
    var dst, key, value;
    dst = {};
    for (key in src) {
      value = src[key];
      if (typeof value === "object") {
        value = clone(value);
      }
      dst[key] = value;
    }
    return dst;
  };

  module.exports.defaults = function(defaults, src) {
    var key, res, value;
    if (src == null) {
      src = {};
    }
    res = clone(defaults);
    for (key in src) {
      value = src[key];
      res[key] = value;
    }
    return res;
  };

  module.exports.isEmpty = function(obj) {
    var key;
    for (key in obj) {
      return false;
    }
    return true;
  };

  ioOptions = ["pretty", "fields", "expand"];

  optName = function(name) {
    if (ioOptions.indexOf(name) !== -1) {
      return "opt_" + name;
    } else {
      return name;
    }
  };

  module.exports.querystringify = function(arg) {
    var key, params, value;
    params = [];
    for (key in arg) {
      value = arg[key];
      key = optName(key);
      if ((value != null ? value.toString : void 0) != null) {
        params.push("" + key + "=" + (value.toString()));
      } else {
        params.push("" + key + "=" + value);
      }
    }
    return params.join("&");
  };

}).call(this);
